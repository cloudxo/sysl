# A collection of helper functions for arr.ai.
#
# If generally useful, these should gradually migrate to a more standard library.

# Invokes a macro on a string as if it were source code at parsing time.
let invokeMacro = \macro \s
    macro -> (//dict(.@transform) >>> \rule \fn 
        fn(//grammar.parse(.@grammar, rule, s))).@value;

# Transforms an AST into a simple tuple of its values.
# Useful for the @transform of a flat grammar.
let simpleTransform = \ast
    let d = //dict(ast) >> \term cond term {('':value, ...): value, _: {}};
    //tuple(d where .@value);

(
    :invokeMacro,
    :simpleTransform,
)
